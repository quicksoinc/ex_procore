# NOTE: This file is auto generated by OpenAPI Generator 6.6.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule ProcoreV1API.Model.Bid do
  @moduledoc """
  Bid
  """

  @derive [Poison.Encoder]
  defstruct [
    :id,
    :bid_package_id,
    :bid_package_title,
    :bid_form_title,
    :awarded,
    :bidders_can_add_line_items,
    :bid_status,
    :company_id,
    :invitation_last_sent_at,
    :is_bidder_committed,
    :lump_sum_amount,
    :lump_sum_enabled,
    :submitted,
    :created_at,
    :updated_at,
    :due_date,
    :bidder_comments,
    :bid_requester,
    :deleted_at,
    :bidder_notes,
    :attachments_count,
    :recipient_ids,
    :recipient_list,
    :recipient_list_with_email_and_number,
    :mailto,
    :bidder_inclusion,
    :bidder_exclusion,
    :bid_convertible_to_subcontract,
    :bid_convertible_to_purchase_order,
    :contract_button_disabled_reason,
    :po_button_disabled_reason,
    :links,
    :vendor,
    :project,
    :bid_items,
    :cost_codes,
    :attachments,
    :attachments_zip_streaming_url
  ]

  @type t :: %__MODULE__{
    :id => integer() | nil,
    :bid_package_id => integer() | nil,
    :bid_package_title => String.t | nil,
    :bid_form_title => String.t | nil,
    :awarded => boolean() | nil,
    :bidders_can_add_line_items => boolean() | nil,
    :bid_status => String.t | nil,
    :company_id => integer() | nil,
    :invitation_last_sent_at => DateTime.t | nil,
    :is_bidder_committed => boolean() | nil,
    :lump_sum_amount => float() | nil,
    :lump_sum_enabled => boolean() | nil,
    :submitted => boolean() | nil,
    :created_at => DateTime.t | nil,
    :updated_at => DateTime.t | nil,
    :due_date => DateTime.t | nil,
    :bidder_comments => String.t | nil,
    :bid_requester => ProcoreV1API.Model.RestV10CompaniesCompanyIdBidsGet200ResponseInnerBidRequester.t | nil,
    :deleted_at => DateTime.t | nil,
    :bidder_notes => String.t | nil,
    :attachments_count => integer() | nil,
    :recipient_ids => [integer()] | nil,
    :recipient_list => [ProcoreV1API.Model.BidRecipientListInner.t] | nil,
    :recipient_list_with_email_and_number => [String.t] | nil,
    :mailto => String.t | nil,
    :bidder_inclusion => String.t | nil,
    :bidder_exclusion => String.t | nil,
    :bid_convertible_to_subcontract => boolean() | nil,
    :bid_convertible_to_purchase_order => boolean() | nil,
    :contract_button_disabled_reason => String.t | nil,
    :po_button_disabled_reason => String.t | nil,
    :links => ProcoreV1API.Model.BidLinks.t | nil,
    :vendor => ProcoreV1API.Model.RestV10CompaniesCompanyIdBidsGet200ResponseInnerVendor.t | nil,
    :project => ProcoreV1API.Model.RestV10CompaniesCompanyIdBidsGet200ResponseInnerProject.t | nil,
    :bid_items => [ProcoreV1API.Model.BidBidItemsInner.t] | nil,
    :cost_codes => [ProcoreV1API.Model.TimesheetEntriesCostCode.t] | nil,
    :attachments => [ProcoreV1API.Model.BidAttachmentsInner.t] | nil,
    :attachments_zip_streaming_url => String.t | nil
  }
end

defimpl Poison.Decoder, for: ProcoreV1API.Model.Bid do
  import ProcoreV1API.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:bid_requester, :struct, ProcoreV1API.Model.RestV10CompaniesCompanyIdBidsGet200ResponseInnerBidRequester, options)
    |> deserialize(:recipient_list, :list, ProcoreV1API.Model.BidRecipientListInner, options)
    |> deserialize(:links, :struct, ProcoreV1API.Model.BidLinks, options)
    |> deserialize(:vendor, :struct, ProcoreV1API.Model.RestV10CompaniesCompanyIdBidsGet200ResponseInnerVendor, options)
    |> deserialize(:project, :struct, ProcoreV1API.Model.RestV10CompaniesCompanyIdBidsGet200ResponseInnerProject, options)
    |> deserialize(:bid_items, :list, ProcoreV1API.Model.BidBidItemsInner, options)
    |> deserialize(:cost_codes, :list, ProcoreV1API.Model.TimesheetEntriesCostCode, options)
    |> deserialize(:attachments, :list, ProcoreV1API.Model.BidAttachmentsInner, options)
  end
end

