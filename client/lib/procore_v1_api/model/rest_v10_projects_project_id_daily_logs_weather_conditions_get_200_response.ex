# NOTE: This file is auto generated by OpenAPI Generator 6.6.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule ProcoreV1API.Model.RestV10ProjectsProjectIdDailyLogsWeatherConditionsGet200Response do
  @moduledoc """
  Accepted weather conditions
  """

  @derive [Poison.Encoder]
  defstruct [
    :sky,
    :ground,
    :calamity,
    :wind,
    :temperature
  ]

  @type t :: %__MODULE__{
    :sky => [ProcoreV1API.Model.RestV10ProjectsProjectIdDailyLogsWeatherConditionsGet200ResponseSkyInner.t] | nil,
    :ground => [ProcoreV1API.Model.RestV10ProjectsProjectIdDailyLogsWeatherConditionsGet200ResponseGroundInner.t] | nil,
    :calamity => [ProcoreV1API.Model.RestV10ProjectsProjectIdDailyLogsWeatherConditionsGet200ResponseCalamityInner.t] | nil,
    :wind => [ProcoreV1API.Model.RestV10ProjectsProjectIdDailyLogsWeatherConditionsGet200ResponseWindInner.t] | nil,
    :temperature => [ProcoreV1API.Model.RestV10ProjectsProjectIdDailyLogsWeatherConditionsGet200ResponseTemperatureInner.t] | nil
  }
end

defimpl Poison.Decoder, for: ProcoreV1API.Model.RestV10ProjectsProjectIdDailyLogsWeatherConditionsGet200Response do
  import ProcoreV1API.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:sky, :list, ProcoreV1API.Model.RestV10ProjectsProjectIdDailyLogsWeatherConditionsGet200ResponseSkyInner, options)
    |> deserialize(:ground, :list, ProcoreV1API.Model.RestV10ProjectsProjectIdDailyLogsWeatherConditionsGet200ResponseGroundInner, options)
    |> deserialize(:calamity, :list, ProcoreV1API.Model.RestV10ProjectsProjectIdDailyLogsWeatherConditionsGet200ResponseCalamityInner, options)
    |> deserialize(:wind, :list, ProcoreV1API.Model.RestV10ProjectsProjectIdDailyLogsWeatherConditionsGet200ResponseWindInner, options)
    |> deserialize(:temperature, :list, ProcoreV1API.Model.RestV10ProjectsProjectIdDailyLogsWeatherConditionsGet200ResponseTemperatureInner, options)
  end
end

