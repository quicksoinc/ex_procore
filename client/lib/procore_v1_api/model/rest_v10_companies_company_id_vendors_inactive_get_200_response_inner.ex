# NOTE: This file is auto generated by OpenAPI Generator 6.6.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule ProcoreV1API.Model.RestV10CompaniesCompanyIdVendorsInactiveGet200ResponseInner do
  @moduledoc """
  
  """

  @derive [Poison.Encoder]
  defstruct [
    :id,
    :name,
    :abbreviated_name,
    :address,
    :authorized_bidder,
    :business_id,
    :business_phone,
    :city,
    :contact_count,
    :company,
    :country_code,
    :created_at,
    :email_address,
    :fax_number,
    :is_active,
    :labor_union,
    :license_number,
    :logo,
    :mobile_phone,
    :non_union_prevailing_wage,
    :notes,
    :origin_data,
    :origin_id,
    :origin_code,
    :prequalified,
    :state_code,
    :synced_to_erp,
    :trade_name,
    :union_member,
    :updated_at,
    :website,
    :zip,
    :business_register,
    :vendor_group,
    :primary_contact,
    :attachments,
    :children_count,
    :legal_name,
    :parent,
    :trades,
    :bidding_distribution,
    :bidding,
    :project_ids,
    :standard_cost_codes,
    :_links
  ]

  @type t :: %__MODULE__{
    :id => integer() | nil,
    :name => String.t | nil,
    :abbreviated_name => String.t | nil,
    :address => String.t | nil,
    :authorized_bidder => boolean() | nil,
    :business_id => String.t | nil,
    :business_phone => String.t | nil,
    :city => String.t | nil,
    :contact_count => integer() | nil,
    :company => String.t | nil,
    :country_code => String.t | nil,
    :created_at => DateTime.t | nil,
    :email_address => String.t | nil,
    :fax_number => String.t | nil,
    :is_active => boolean() | nil,
    :labor_union => String.t | nil,
    :license_number => String.t | nil,
    :logo => String.t | nil,
    :mobile_phone => String.t | nil,
    :non_union_prevailing_wage => boolean() | nil,
    :notes => String.t | nil,
    :origin_data => String.t | nil,
    :origin_id => String.t | nil,
    :origin_code => String.t | nil,
    :prequalified => boolean() | nil,
    :state_code => String.t | nil,
    :synced_to_erp => boolean() | nil,
    :trade_name => String.t | nil,
    :union_member => boolean() | nil,
    :updated_at => DateTime.t | nil,
    :website => String.t | nil,
    :zip => String.t | nil,
    :business_register => ProcoreV1API.Model.NormalViewBusinessRegister.t | nil,
    :vendor_group => ProcoreV1API.Model.NormalViewVendorGroup.t | nil,
    :primary_contact => ProcoreV1API.Model.NormalViewPrimaryContact.t | nil,
    :attachments => [ProcoreV1API.Model.RestV10WorkOrderContractsPost201ResponseAttachmentsInner.t] | nil,
    :children_count => integer() | nil,
    :legal_name => String.t | nil,
    :parent => ProcoreV1API.Model.ExtendedViewParent.t | nil,
    :trades => [ProcoreV1API.Model.Trade2.t] | nil,
    :bidding_distribution => [ProcoreV1API.Model.ArrayOfTaskItemsThatWereSentOutInnerAllOfAssignee.t] | nil,
    :bidding => ProcoreV1API.Model.ExtendedViewBidding.t | nil,
    :project_ids => [integer()] | nil,
    :standard_cost_codes => [ProcoreV1API.Model.StandardCostCode.t] | nil,
    :_links => ProcoreV1API.Model.RestV10ProjectsProjectIdVendorsInactiveGet200ResponseInnerAllOfLinks.t | nil
  }
end

defimpl Poison.Decoder, for: ProcoreV1API.Model.RestV10CompaniesCompanyIdVendorsInactiveGet200ResponseInner do
  import ProcoreV1API.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:business_register, :struct, ProcoreV1API.Model.NormalViewBusinessRegister, options)
    |> deserialize(:vendor_group, :struct, ProcoreV1API.Model.NormalViewVendorGroup, options)
    |> deserialize(:primary_contact, :struct, ProcoreV1API.Model.NormalViewPrimaryContact, options)
    |> deserialize(:attachments, :list, ProcoreV1API.Model.RestV10WorkOrderContractsPost201ResponseAttachmentsInner, options)
    |> deserialize(:parent, :struct, ProcoreV1API.Model.ExtendedViewParent, options)
    |> deserialize(:trades, :list, ProcoreV1API.Model.Trade2, options)
    |> deserialize(:bidding_distribution, :list, ProcoreV1API.Model.ArrayOfTaskItemsThatWereSentOutInnerAllOfAssignee, options)
    |> deserialize(:bidding, :struct, ProcoreV1API.Model.ExtendedViewBidding, options)
    |> deserialize(:standard_cost_codes, :list, ProcoreV1API.Model.StandardCostCode, options)
    |> deserialize(:_links, :struct, ProcoreV1API.Model.RestV10ProjectsProjectIdVendorsInactiveGet200ResponseInnerAllOfLinks, options)
  end
end

