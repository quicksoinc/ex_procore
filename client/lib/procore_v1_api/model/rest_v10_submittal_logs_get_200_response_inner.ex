# NOTE: This file is auto generated by OpenAPI Generator 6.6.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule ProcoreV1API.Model.RestV10SubmittalLogsGet200ResponseInner do
  @moduledoc """
  
  """

  @derive [Poison.Encoder]
  defstruct [
    :id,
    :title,
    :number,
    :revision,
    :due_date,
    :attachment_count,
    :status,
    :closed,
    :specification_section,
    :package,
    :ball_in_court,
    :responses,
    :location
  ]

  @type t :: %__MODULE__{
    :id => integer(),
    :title => String.t | nil,
    :number => String.t,
    :revision => String.t | nil,
    :due_date => Date.t | nil,
    :attachment_count => integer() | nil,
    :status => String.t,
    :closed => boolean() | nil,
    :specification_section => ProcoreV1API.Model.RestV10SubmittalLogsGet200ResponseInnerSpecificationSection.t | nil,
    :package => ProcoreV1API.Model.RestV10SubmittalLogsGet200ResponseInnerPackage.t | nil,
    :ball_in_court => [ProcoreV1API.Model.RestV10ProjectsProjectIdWorkLogsGet200ResponseInnerCreatedBy.t] | nil,
    :responses => [ProcoreV1API.Model.RestV10SubmittalLogsGet200ResponseInnerResponsesInner.t] | nil,
    :location => ProcoreV1API.Model.Location.t | nil
  }
end

defimpl Poison.Decoder, for: ProcoreV1API.Model.RestV10SubmittalLogsGet200ResponseInner do
  import ProcoreV1API.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:due_date, :date, nil, options)
    |> deserialize(:specification_section, :struct, ProcoreV1API.Model.RestV10SubmittalLogsGet200ResponseInnerSpecificationSection, options)
    |> deserialize(:package, :struct, ProcoreV1API.Model.RestV10SubmittalLogsGet200ResponseInnerPackage, options)
    |> deserialize(:ball_in_court, :list, ProcoreV1API.Model.RestV10ProjectsProjectIdWorkLogsGet200ResponseInnerCreatedBy, options)
    |> deserialize(:responses, :list, ProcoreV1API.Model.RestV10SubmittalLogsGet200ResponseInnerResponsesInner, options)
    |> deserialize(:location, :struct, ProcoreV1API.Model.Location, options)
  end
end

