# NOTE: This file is auto generated by OpenAPI Generator 6.6.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule ProcoreV1API.Model.DrawingArea1 do
  @moduledoc """
  Drawing Area
  """

  @derive [Poison.Encoder]
  defstruct [
    :id,
    :name,
    :drawings_count,
    :description,
    :drawing_sets,
    :drawing_disciplines
  ]

  @type t :: %__MODULE__{
    :id => integer() | nil,
    :name => String.t | nil,
    :drawings_count => integer() | nil,
    :description => String.t | nil,
    :drawing_sets => [ProcoreV1API.Model.DrawingSet1.t] | nil,
    :drawing_disciplines => [ProcoreV1API.Model.DrawingArea1DrawingDisciplinesInner.t] | nil
  }
end

defimpl Poison.Decoder, for: ProcoreV1API.Model.DrawingArea1 do
  import ProcoreV1API.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:drawing_sets, :list, ProcoreV1API.Model.DrawingSet1, options)
    |> deserialize(:drawing_disciplines, :list, ProcoreV1API.Model.DrawingArea1DrawingDisciplinesInner, options)
  end
end

