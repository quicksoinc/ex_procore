# NOTE: This file is auto generated by OpenAPI Generator 6.6.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule ProcoreRestV1APIDocumentation.Model.NormalView do
  @moduledoc """
  
  """

  @derive [Poison.Encoder]
  defstruct [
    :id,
    :name,
    :abbreviated_name,
    :address,
    :attachments,
    :authorized_bidder,
    :business_id,
    :business_phone,
    :business_register,
    :city,
    :company,
    :country_code,
    :created_at,
    :email_address,
    :fax_number,
    :is_active,
    :labor_union,
    :license_number,
    :logo,
    :mobile_phone,
    :non_union_prevailing_wage,
    :notes,
    :origin_code,
    :origin_data,
    :origin_id,
    :prequalified,
    :primary_contact,
    :project_ids,
    :state_code,
    :synced_to_erp,
    :trade_name,
    :union_member,
    :updated_at,
    :vendor_group,
    :website,
    :zip
  ]

  @type t :: %__MODULE__{
    :id => integer() | nil,
    :name => String.t | nil,
    :abbreviated_name => String.t | nil,
    :address => String.t | nil,
    :attachments => [ProcoreRestV1APIDocumentation.Model.NormalViewAttachmentsInner.t] | nil,
    :authorized_bidder => boolean() | nil,
    :business_id => String.t | nil,
    :business_phone => String.t | nil,
    :business_register => ProcoreRestV1APIDocumentation.Model.NormalViewBusinessRegister.t | nil,
    :city => String.t | nil,
    :company => String.t | nil,
    :country_code => String.t | nil,
    :created_at => DateTime.t | nil,
    :email_address => String.t | nil,
    :fax_number => String.t | nil,
    :is_active => boolean() | nil,
    :labor_union => String.t | nil,
    :license_number => String.t | nil,
    :logo => String.t | nil,
    :mobile_phone => String.t | nil,
    :non_union_prevailing_wage => boolean() | nil,
    :notes => String.t | nil,
    :origin_code => String.t | nil,
    :origin_data => String.t | nil,
    :origin_id => String.t | nil,
    :prequalified => boolean() | nil,
    :primary_contact => ProcoreRestV1APIDocumentation.Model.NormalViewPrimaryContact.t | nil,
    :project_ids => [integer()] | nil,
    :state_code => String.t | nil,
    :synced_to_erp => boolean() | nil,
    :trade_name => String.t | nil,
    :union_member => boolean() | nil,
    :updated_at => DateTime.t | nil,
    :vendor_group => ProcoreRestV1APIDocumentation.Model.NormalViewVendorGroup.t | nil,
    :website => String.t | nil,
    :zip => String.t | nil
  }
end

defimpl Poison.Decoder, for: ProcoreRestV1APIDocumentation.Model.NormalView do
  import ProcoreRestV1APIDocumentation.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:attachments, :list, ProcoreRestV1APIDocumentation.Model.NormalViewAttachmentsInner, options)
    |> deserialize(:business_register, :struct, ProcoreRestV1APIDocumentation.Model.NormalViewBusinessRegister, options)
    |> deserialize(:primary_contact, :struct, ProcoreRestV1APIDocumentation.Model.NormalViewPrimaryContact, options)
    |> deserialize(:vendor_group, :struct, ProcoreRestV1APIDocumentation.Model.NormalViewVendorGroup, options)
  end
end

